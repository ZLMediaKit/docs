import{_ as a}from"./generate_ssl_self-signed_certificate_and_test-Bpb7qCEN.js";import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as s,e as t}from"./app-BJNuBvSk.js";const i={},r=t(`<h1 id="_1-generate-private-key" tabindex="-1"><a class="header-anchor" href="#_1-generate-private-key" aria-hidden="true">#</a> 1. Generate Private Key</h1><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> openssl genrsa  <span class="token parameter variable">-out</span> server.key <span class="token number">2048</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="_2-create-certificate-signing-request-csr-file" tabindex="-1"><a class="header-anchor" href="#_2-create-certificate-signing-request-csr-file" aria-hidden="true">#</a> 2. Create Certificate Signing Request (CSR) File</h1><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-key</span> server.key <span class="token parameter variable">-out</span> server.csr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Note: You will be prompted to enter the domain name (Common Name (e.g. server FQDN or YOUR name)):</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Country Name <span class="token punctuation">(</span><span class="token number">2</span> letter code<span class="token punctuation">)</span> <span class="token punctuation">[</span>AU<span class="token punctuation">]</span>:cn
State or Province Name <span class="token punctuation">(</span>full name<span class="token punctuation">)</span> <span class="token punctuation">[</span>Some-State<span class="token punctuation">]</span>:gd
Locality Name <span class="token punctuation">(</span>eg, city<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>:sz
Organization Name <span class="token punctuation">(</span>eg, company<span class="token punctuation">)</span> <span class="token punctuation">[</span>Internet Widgits Pty Ltd<span class="token punctuation">]</span>:company
Organizational Unit Name <span class="token punctuation">(</span>eg, section<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>:section
Common Name <span class="token punctuation">(</span>e.g. server FQDN or YOUR name<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>:zlm.com
Email Address <span class="token punctuation">[</span><span class="token punctuation">]</span>:xiachu@qq.com

Please enter the following <span class="token string">&#39;extra&#39;</span> attributes
to be sent with your certificate request
A challenge password <span class="token punctuation">[</span><span class="token punctuation">]</span>:
An optional company name <span class="token punctuation">[</span><span class="token punctuation">]</span>:zlm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_3-self-sign-the-certificate-and-generate-public-key-valid-for-10-years" tabindex="-1"><a class="header-anchor" href="#_3-self-sign-the-certificate-and-generate-public-key-valid-for-10-years" aria-hidden="true">#</a> 3. Self-Sign the Certificate and Generate Public Key (Valid for 10 years)</h1><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span> <span class="token parameter variable">-in</span> server.csr <span class="token parameter variable">-signkey</span> server.key <span class="token parameter variable">-out</span> server.crt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Executing this command will print the following information:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Signature ok
<span class="token assign-left variable">subject</span><span class="token operator">=</span>/C<span class="token operator">=</span>cn/ST<span class="token operator">=</span>gd/L<span class="token operator">=</span>sz/O<span class="token operator">=</span>company/OU<span class="token operator">=</span>section/CN<span class="token operator">=</span>zlm.com/emailAddress<span class="token operator">=</span>xiachu@qq.com
Getting Private key
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_4-merge-public-key-and-private-key" tabindex="-1"><a class="header-anchor" href="#_4-merge-public-key-and-private-key" aria-hidden="true">#</a> 4. Merge Public Key and Private Key</h1><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> server.crt server.key <span class="token operator">&gt;</span> ./ssl.pem
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="_5-load-the-certificate" tabindex="-1"><a class="header-anchor" href="#_5-load-the-certificate" aria-hidden="true">#</a> 5. Load the Certificate</h1><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./MediaServer <span class="token parameter variable">-s</span> ./ssl.pem
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+a+'" alt="图片.png" tabindex="0" loading="lazy"><figcaption>图片.png</figcaption></figure>',15),c=[r];function l(p,o){return n(),s("div",null,c)}const v=e(i,[["render",l],["__file","generate_ssl_self-signed_certificate_and_test.html.vue"]]);export{v as default};
