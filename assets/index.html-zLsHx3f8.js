import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as a,c as n,a as e,d as t,b as r,e as d}from"./app-BJNuBvSk.js";const o={},c=e("h2",{id:"特性",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#特性","aria-hidden":"true"},"#"),t(" 特性")],-1),p=e("li",null,"NACK(重传)",-1),m=e("li",null,"listener 支持",-1),h=e("li",null,"推流只支持 ts 推流",-1),u=e("li",null,"拉流只支持 ts 拉流",-1),v={href:"https://haivision.github.io/srt-rfc/draft-sharabayko-srt.html",target:"_blank",rel:"noopener noreferrer"},_=e("li",null,"版本支持(>=1.3.0)",-1),f=e("li",null,"fec 与加密没有实现",-1),b=d(`<h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><p>zlm 中的 srt 根据 streamid 来确定是推流还是拉流，来确定 vhost,app,streamid(ZLM 中的)、</p><p>srt 中的 streamid 为 <code>#!::key1=value1,key2=value2,key3=value4......</code></p><p>h,r 为特殊的 key,来确定 vhost,app,streamid,如果没有 h 则 vhost 为默认值</p><p>m 为特殊 key 来确定是推流还是拉流，如果为 publish 则为推流，否则为拉流 ,如果不存在 m,则默认为拉流</p><p>其他 key 与 m 会作为 webhook 的鉴权参数</p><p>如：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#!::h=zlmediakit.com,r=live/test,m=publish

vhost = zlmediakit.com

app = live

streamid = test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>是推流</p><ul><li><p>OBS 推流地址</p><p><code>srt://192.168.1.105:9000?streamid=#!::r=live/test,m=publish</code></p></li><li><p>ffmpeg 推流</p><p><code>ffmpeg -re -stream_loop -1 -i test.ts -c:v copy -c:a copy -f mpegts srt://192.168.1.105:9000?streamid=#!::r=live/test,m=publish</code></p></li><li><p>ffplay 拉流</p><p><code>ffplay -i srt://192.168.1.105:9000?streamid=#!::r=live/test</code></p></li><li><p>vlc 拉流</p><ul><li>vlc 拉流需要在偏好设置-&gt;串流输出-&gt;访问输出-&gt;SRT 中设置 streamid,例如<code>#!::r=live/test</code></li><li>拉流时只需填入<code>srt://192.168.1.105:9000</code>即可</li></ul></li></ul>`,10);function k(x,g){const i=l("ExternalLinkIcon");return a(),n("div",null,[c,e("ul",null,[p,m,h,u,e("li",null,[t("协议实现 "),e("a",v,[t("参考"),r(i)])]),_,f]),b])}const B=s(o,[["render",k],["__file","index.html.vue"]]);export{B as default};
