import{_ as s}from"./push_test-C9UQC6v-.js";import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as r,c as p,a as l,d as a,b as i,w as c,e as o}from"./app-BLv1GOjr.js";const d={},m=o(`<h2 id="推流测试" tabindex="-1"><a class="header-anchor" href="#推流测试" aria-hidden="true">#</a> 推流测试</h2><p>ZLMediaKit 支持 rtsp/rtmp/rtp 推流，一般通常使用 obs/ffmpeg 推流测试，其中 FFmpeg 推流命令支持以下：</p><ul><li>1、使用 rtsp 方式推流</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># h264推流</span>
ffmpeg <span class="token parameter variable">-re</span> <span class="token parameter variable">-i</span> <span class="token string">&quot;/path/to/test.mp4&quot;</span> <span class="token parameter variable">-vcodec</span> h264 <span class="token parameter variable">-acodec</span> aac <span class="token parameter variable">-f</span> rtsp <span class="token parameter variable">-rtsp_transport</span> tcp rtsp://127.0.0.1/live/test
<span class="token comment"># h265推流</span>
ffmpeg <span class="token parameter variable">-re</span> <span class="token parameter variable">-i</span> <span class="token string">&quot;/path/to/test.mp4&quot;</span> <span class="token parameter variable">-vcodec</span> h265 <span class="token parameter variable">-acodec</span> aac <span class="token parameter variable">-f</span> rtsp <span class="token parameter variable">-rtsp_transport</span> tcp rtsp://127.0.0.1/live/test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>2、使用 rtmp 方式推流</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#如果未安装FFmpeg，你也可以用obs推流</span>
ffmpeg <span class="token parameter variable">-re</span> <span class="token parameter variable">-i</span> <span class="token string">&quot;/path/to/test.mp4&quot;</span> <span class="token parameter variable">-vcodec</span> h264 <span class="token parameter variable">-acodec</span> aac <span class="token parameter variable">-f</span> flv rtmp://127.0.0.1/live/test
<span class="token comment"># RTMP标准不支持H265,但是国内有自行扩展的，如果你想让FFmpeg支持RTMP-H265,请按照此文章编译：https://github.com/ksvc/FFmpeg/wiki/hevcpush</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>3、使用 rtp 方式推流</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># h264推流</span>
ffmpeg <span class="token parameter variable">-re</span> <span class="token parameter variable">-i</span> <span class="token string">&quot;/path/to/test.mp4&quot;</span> <span class="token parameter variable">-vcodec</span> h264 <span class="token parameter variable">-acodec</span> aac <span class="token parameter variable">-f</span> rtp_mpegts rtp://127.0.0.1:10000
<span class="token comment"># h265推流</span>
ffmpeg <span class="token parameter variable">-re</span> <span class="token parameter variable">-i</span> <span class="token string">&quot;/path/to/test.mp4&quot;</span> <span class="token parameter variable">-vcodec</span> h265 <span class="token parameter variable">-acodec</span> aac <span class="token parameter variable">-f</span> rtp_mpegts rtp://127.0.0.1:10000
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="观察日志" tabindex="-1"><a class="header-anchor" href="#观察日志" aria-hidden="true">#</a> 观察日志</h2><p>如果推流成功，会打印这种日志： <img src="`+s+`" alt="image" loading="lazy"></p><p>日志中相关字符串分别代表：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">2020</span>-04-10 <span class="token number">12</span>:51:52.331 I <span class="token operator">|</span> regist rtsp __defaultVhost__ rtp 206442D7
                                    ^           ^         ^      ^
                                  schema      vhost      app stream_id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="播放地址" tabindex="-1"><a class="header-anchor" href="#播放地址" aria-hidden="true">#</a> 播放地址</h2>`,13);function v(u,b){const e=t("RouterLink");return r(),p("div",null,[m,l("p",null,[a("请按照"),i(e,{to:"/zh/guide/media_server/play_url_rules.html"},{default:c(()=>[a("播放 url 规则")]),_:1}),a("来播放上述的推流。")])])}const _=n(d,[["render",v],["__file","push_test.html.vue"]]);export{_ as default};
