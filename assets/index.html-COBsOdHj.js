import{_ as r}from"./vs_code_zh-ICcBOeTO.js";import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as d,o as p,c as m,f as b,a as e,d as n,b as t,w as a,e as h}from"./app-CF_X8wgR.js";const v={},g=e("p",null,"This tutorial will guide you compiling and running ZLMediaKit.",-1),_=e("h2",{id:"build-environment",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#build-environment","aria-hidden":"true"},"#"),n(" Build Environment")],-1),k=e("div",{class:"hint-container tip"},[e("p",{class:"hint-container-title"},"Beginner Notice"),e("p",null,"If you're a beginner, we highly recommend compiling ZLMediaKit using Ubuntu16 or later versions. macOS is the second recommended platform. We don't recommend using CentOS6.x or Windows.")],-1),f={class:"hint-container info"},w=e("p",{class:"hint-container-title"},"vcpkg",-1),y=e("h3",{id:"compiler-supporting-c-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#compiler-supporting-c-11","aria-hidden":"true"},"#"),n(" Compiler Supporting C++11")],-1),x=e("p",null,"ZLMediaKit uses C++11 syntax and libraries, hence, it's required that your compiler fully supports the C++11 standard. This means:",-1),A=e("ul",null,[e("li",null,"On Linux, gcc version >= 4.8 (4.7 should also be supported)"),e("li",null,"On macOS, clang >= ??? (it's uncertain, but most likely won't encounter any issues)"),e("li",null,"On Windows, Visual Studio >= 2015 (some versions of VS2013 can also compile, but for a smoother experience, VS2017 is recommended)")],-1),S=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"sudo"),n(),e("span",{class:"token function"},"apt"),n(),e("span",{class:"token function"},"install"),n(` build-essential
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),L=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"sudo"),n(" yum "),e("span",{class:"token parameter variable"},"-y"),n(),e("span",{class:"token function"},"install"),n(` gcc
`),e("span",{class:"token function"},"sudo"),n(" yum "),e("span",{class:"token parameter variable"},"-y"),n(),e("span",{class:"token function"},"install"),n(` gcc-c++
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),O=e("p",null,"You need to manually switch to a higher version of gcc.",-1),M=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"sudo"),n(" yum "),e("span",{class:"token function"},"install"),n(" centos-release-scl "),e("span",{class:"token parameter variable"},"-y"),n(`
`),e("span",{class:"token function"},"sudo"),n(" yum "),e("span",{class:"token function"},"install"),n(" devtoolset-4-toolchain "),e("span",{class:"token parameter variable"},"-y"),n(`
`),e("span",{class:"token comment"},"# Switch to a higher version gcc"),n(`
scl `),e("span",{class:"token builtin class-name"},"enable"),n(" devtoolset-4 "),e("span",{class:"token function"},"bash"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),C={href:"https://developer.apple.com/xcode/",target:"_blank",rel:"noopener noreferrer"},K={href:"https://visualstudio.microsoft.com/vs/community/",target:"_blank",rel:"noopener noreferrer"},Z=e("strong",null,"click C++ env",-1),D=e("h3",{id:"cmake",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#cmake","aria-hidden":"true"},"#"),n(" CMake")],-1),I=e("p",null,"ZLMediaKit uses CMake to build the project, so you need CMake to compile.",-1),T=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"sudo"),n(),e("span",{class:"token function"},"apt"),n(),e("span",{class:"token function"},"install"),n(` cmake
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),W=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"sudo"),n(" yum "),e("span",{class:"token parameter variable"},"-y"),n(),e("span",{class:"token function"},"install"),n(` cmake
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),j=e("p",null,"You need to manually switch to a higher version of CMake.",-1),R=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"wget"),n(` https://github.com/Kitware/CMake/releases/download/v3.17.0-rc3/cmake-3.17.0-rc3.tar.gz
`),e("span",{class:"token function"},"tar"),n(),e("span",{class:"token parameter variable"},"-xvf"),n(` cmake-3.17.0-rc3.tar.gz
`),e("span",{class:"token builtin class-name"},"cd"),n(` cmake-3.17.0-rc3
./configure
`),e("span",{class:"token function"},"make"),n(),e("span",{class:"token parameter variable"},"-j4"),n(`
`),e("span",{class:"token function"},"sudo"),n(),e("span",{class:"token function"},"make"),n(),e("span",{class:"token function"},"install"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),P=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n("brew "),e("span",{class:"token function"},"install"),n(` cmake
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),E=e("li",null,"If using vs2017+, vs already includes cmake, you just need to tick it during installation.",-1),N={href:"https://github.com/Kitware/CMake/releases/download/",target:"_blank",rel:"noopener noreferrer"},V=h(`<h2 id="obtain-source-code" tabindex="-1"><a class="header-anchor" href="#obtain-source-code" aria-hidden="true">#</a> Obtain Source Code</h2><p>Use git to clone the ZLMediaKit source code and its submodules:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone <span class="token parameter variable">--depth</span> <span class="token number">1</span> https://github.com/ZLMediaKit/ZLMediaKit
<span class="token builtin class-name">cd</span> ZLMediaKit
<span class="token comment"># Init submodules (Required)</span>
<span class="token function">git</span> submodule update <span class="token parameter variable">--init</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>Do NOT download the source code with zip directly from GitHub. ZLMediaKit is relaying on multiple third-party project codes and manages them with git submodules.</p></div><h3 id="_3rd-party-dependencies" tabindex="-1"><a class="header-anchor" href="#_3rd-party-dependencies" aria-hidden="true">#</a> 3rd party Dependencies</h3><p>ZLMediaKit depends on some optional third-party libraries. During the building of ZLMediaKit, cmake can search for these libraries in the system path and enable relevant features based on their installation status.</p><ul><li><p>openssl</p><p>You need to install the openssl library before compiling to use related features.</p><ul><li>Playing rtmp with flash player</li><li>https/rtsps/webrtc related features</li></ul></li><li><p>ffmpeg</p><p>ZLMediaKit can support multiple protocols for pulling streams by forking ffmpeg as a subprocess. FFmpeg does not need to be installed during compilation.</p></li><li><p>sdl, avcodec, avutil</p><p>These three libraries are used by the test_player test program of ZLMediaKit. You usually do not need to install these three libraries.</p></li></ul>`,7),z=e("p",null,"Except openssl, others are optional:",-1),U=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"sudo"),n(),e("span",{class:"token function"},"apt"),n(),e("span",{class:"token function"},"install"),n(` libssl-dev
`),e("span",{class:"token function"},"sudo"),n(),e("span",{class:"token function"},"apt"),n(),e("span",{class:"token function"},"install"),n(` libsdl-dev
`),e("span",{class:"token function"},"sudo"),n(),e("span",{class:"token function"},"apt"),n(),e("span",{class:"token function"},"install"),n(` libavcodec-dev
`),e("span",{class:"token function"},"sudo"),n(),e("span",{class:"token function"},"apt"),n(),e("span",{class:"token function"},"install"),n(` libavutil-dev
`),e("span",{class:"token function"},"sudo"),n(),e("span",{class:"token function"},"apt"),n(),e("span",{class:"token function"},"install"),n(` ffmpeg
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),B=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"sudo"),n(" yum "),e("span",{class:"token function"},"install"),n(` libssl-dev
`),e("span",{class:"token function"},"sudo"),n(" yum "),e("span",{class:"token function"},"install"),n(` libsdl-dev
`),e("span",{class:"token function"},"sudo"),n(" yum "),e("span",{class:"token function"},"install"),n(` libavcodec-dev
`),e("span",{class:"token function"},"sudo"),n(" yum "),e("span",{class:"token function"},"install"),n(` libavutil-dev
`),e("span",{class:"token function"},"sudo"),n(" yum "),e("span",{class:"token function"},"install"),n(` ffmpeg
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),F={href:"https://blog.51cto.com/mengix/2452395",target:"_blank",rel:"noopener noreferrer"},G=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"sudo"),n(" brew "),e("span",{class:"token function"},"install"),n(` libssl-dev
`),e("span",{class:"token function"},"sudo"),n(" brew "),e("span",{class:"token function"},"install"),n(` libsdl-dev
`),e("span",{class:"token function"},"sudo"),n(" brew "),e("span",{class:"token function"},"install"),n(` libavcodec-dev
`),e("span",{class:"token function"},"sudo"),n(" brew "),e("span",{class:"token function"},"install"),n(` libavutil-dev
`),e("span",{class:"token function"},"sudo"),n(" brew "),e("span",{class:"token function"},"install"),n(` ffmpeg
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),X={href:"https://slproweb.com/products/Win32OpenSSL.html",target:"_blank",rel:"noopener noreferrer"},Y=e("h2",{id:"building-and-compiling-zlmediakit",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#building-and-compiling-zlmediakit","aria-hidden":"true"},"#"),n(" Building and Compiling ZLMediaKit")],-1),H={class:"hint-container info"},q=e("p",{class:"hint-container-title"},"webrtc",-1),J=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token builtin class-name"},"cd"),n(` ZLMediaKit
`),e("span",{class:"token function"},"mkdir"),n(` build
`),e("span",{class:"token builtin class-name"},"cd"),n(` build
cmake `),e("span",{class:"token punctuation"},".."),n(`
`),e("span",{class:"token function"},"make"),n(),e("span",{class:"token parameter variable"},"-j4"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),Q=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token builtin class-name"},"cd"),n(` ZLMediaKit
`),e("span",{class:"token function"},"mkdir"),n(` build
`),e("span",{class:"token builtin class-name"},"cd"),n(` build
`),e("span",{class:"token comment"},"# Point DOPENSSL_ROOT_DIR to your openssl path"),n(`
cmake `),e("span",{class:"token punctuation"},".."),n(),e("span",{class:"token parameter variable"},"-DOPENSSL_ROOT_DIR"),e("span",{class:"token operator"},"="),n(`/usr/local/Cellar/openssl/1.0.2j/
`),e("span",{class:"token function"},"make"),n(),e("span",{class:"token parameter variable"},"-j4"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),$=e("ul",null,[e("li",null,[e("p",null,[n("If you are using VS2017 or above, you can directly open the project folder from the VS navbar with "),e("code",null,"File"),n(" -> "),e("code",null,"Open"),n(" -> "),e("code",null,"Folder"),n(" -> "),e("code",null,"Select ZLMediaKit code root directory and open"),n(".")]),e("figure",null,[e("img",{src:r,alt:"image",tabindex:"0",loading:"lazy"}),e("figcaption",null,"image")])]),e("li",null,[e("p",null,"Otherwise, you should:"),e("ol",null,[e("li",null,"Use cmake-gui to open the project and generate the vs project file."),e("li",null,"Find the project file (ZLMediaKit.sln) and double-click it to open with vs2017."),e("li",null,"Choose to compile the Release version."),e("li",null,"Locate the target file and run the test case.")])])],-1),ee=e("p",null,"Open the Android directory in Android Studio.",-1),ne=e("p",null,"Generate XCode project and then compile the C API static library.",-1),ae=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token builtin class-name"},"cd"),n(` ZLMediaKit
`),e("span",{class:"token function"},"mkdir"),n(),e("span",{class:"token parameter variable"},"-p"),n(` build
`),e("span",{class:"token builtin class-name"},"cd"),n(` build
`),e("span",{class:"token comment"},"# Generate the Xcode project, the project file is in the build directory"),n(`
cmake `),e("span",{class:"token punctuation"},".."),n(),e("span",{class:"token parameter variable"},"-G"),n(" Xcode "),e("span",{class:"token parameter variable"},"-DCMAKE_TOOLCHAIN_FILE"),e("span",{class:"token operator"},"="),e("span",{class:"token punctuation"},".."),n("/cmake/ios.toolchain.cmake  "),e("span",{class:"token parameter variable"},"-DPLATFORM"),e("span",{class:"token operator"},"="),n(`OS64COMBINED
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),se=e("h2",{id:"run-zlmediakit",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#run-zlmediakit","aria-hidden":"true"},"#"),n(" Run ZLMediaKit")],-1),ie=e("p",null,"The ZLMediaKit project mainly generates three types of binary target files, which are located in release directory.",-1),te=e("h3",{id:"mediaserver-process",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#mediaserver-process","aria-hidden":"true"},"#"),n(" MediaServer Process")],-1),le=e("p",null,"This is the main process of ZLMediaKit as a server. This process can be used directly as a streaming media server for testing without any development.",-1),oe=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token builtin class-name"},"cd"),n(` ZLMediaKit/release/linux/Debug
`),e("span",{class:"token comment"},"# Learn startup parameters with -h"),n(`
./MediaServer `),e("span",{class:"token parameter variable"},"-h"),n(`
`),e("span",{class:"token comment"},"# Start in daemon mode"),n(`
./MediaServer `),e("span",{class:"token parameter variable"},"-d"),n(),e("span",{class:"token operator"},"&"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),ce=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token builtin class-name"},"cd"),n(` ZLMediaKit/release/mac/Debug
`),e("span",{class:"token comment"},"# Learn startup parameters with -h"),n(`
./MediaServer `),e("span",{class:"token parameter variable"},"-h"),n(`
`),e("span",{class:"token comment"},"# Start in daemon mode"),n(`
./MediaServer `),e("span",{class:"token parameter variable"},"-d"),n(),e("span",{class:"token operator"},"&"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),de=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token builtin class-name"},"cd"),n(` ZLMediaKit/release/windows/Debug
`),e("span",{class:"token comment"},"# Learn startup parameters with -h"),n(`
./MediaServer `),e("span",{class:"token parameter variable"},"-h"),n(`
`),e("span",{class:"token comment"},"# Start in daemon mode"),n(`
./MediaServer `),e("span",{class:"token parameter variable"},"-d"),n(),e("span",{class:"token operator"},"&"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),re=e("h3",{id:"c-api-sdk",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#c-api-sdk","aria-hidden":"true"},"#"),n(" C API SDK")],-1),ue=e("p",null,"ZLMediaKit also provides a C language-based API SDK library for further development.",-1),pe=e("p",null,[n("The header file is located at "),e("code",null,"ZLMediaKit/api/include"),n(" with detailed comments, could be generally sufficient for further development.")],-1),me=e("p",null,"Lib files:",-1),be=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,`ZLMediaKit/release/linux/Debug/libmk_api.so
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),he=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,`ZLMediaKit/release/linux/mac/libmk_api.dylib
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),ve=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,`ZLMediaKit/release/windows/Debug/mk_api.dll
ZLMediaKit/release/windows/Debug/mk_api.lib
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),ge=e("h3",{id:"test-programs-starting-with-test",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#test-programs-starting-with-test","aria-hidden":"true"},"#"),n(" Test programs starting with "),e("code",null,"test_")],-1),_e=e("p",null,[n("Related codes are under "),e("code",null,"ZLMediaKit/tests"),n(" directory, and you can start the test process by reading codes.")],-1),ke=e("h2",{id:"stream-testing",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#stream-testing","aria-hidden":"true"},"#"),n(" Stream Testing")],-1);function fe(we,ye){const l=d("RouterLink"),c=d("ExternalLinkIcon"),o=d("Tabs");return p(),m("div",null,[g,b(" more "),_,k,e("div",f,[w,e("p",null,[n("ZLMediaKit has been launched on vcpkg, please refer to "),t(l,{to:"/guide/install/install_zlmediakit_using_vcpkg.html"},{default:a(()=>[n("install zlmediakit using vcpkg")]),_:1}),n(" for convenient installation.")])]),y,x,A,t(o,{id:"40",data:[{id:"Debian-based (including Ubuntu)"},{id:"CentOS7+"},{id:"CentOS 6.x"},{id:"macOS"},{id:"Windows"}],"tab-id":"env"},{title0:a(({value:s,isActive:i})=>[n("Debian-based (including Ubuntu)")]),title1:a(({value:s,isActive:i})=>[n("CentOS7+")]),title2:a(({value:s,isActive:i})=>[n("CentOS 6.x")]),title3:a(({value:s,isActive:i})=>[n("macOS")]),title4:a(({value:s,isActive:i})=>[n("Windows")]),tab0:a(({value:s,isActive:i})=>[S]),tab1:a(({value:s,isActive:i})=>[L]),tab2:a(({value:s,isActive:i})=>[O,M]),tab3:a(({value:s,isActive:i})=>[e("p",null,[e("a",C,[n("Install the latest Xcode"),t(c)]),n(".")])]),tab4:a(({value:s,isActive:i})=>[e("p",null,[e("a",K,[n("Install latest Visual Studio Community"),t(c)]),n(" and "),Z,n(".")])]),_:1},8,["data"]),D,I,t(o,{id:"70",data:[{id:"Debian-based (including Ubuntu)"},{id:"CentOS7+"},{id:"CentOS 6.x"},{id:"macOS"},{id:"Windows"}],"tab-id":"env"},{title0:a(({value:s,isActive:i})=>[n("Debian-based (including Ubuntu)")]),title1:a(({value:s,isActive:i})=>[n("CentOS7+")]),title2:a(({value:s,isActive:i})=>[n("CentOS 6.x")]),title3:a(({value:s,isActive:i})=>[n("macOS")]),title4:a(({value:s,isActive:i})=>[n("Windows")]),tab0:a(({value:s,isActive:i})=>[T]),tab1:a(({value:s,isActive:i})=>[W]),tab2:a(({value:s,isActive:i})=>[j,R]),tab3:a(({value:s,isActive:i})=>[P]),tab4:a(({value:s,isActive:i})=>[e("ul",null,[E,e("li",null,[n("Otherwise, you need to "),e("a",N,[n("download and install cmake-gui"),t(c)])])])]),_:1},8,["data"]),V,t(o,{id:"157",data:[{id:"Debian-based (including Ubuntu)"},{id:"CentOS7+"},{id:"CentOS 6.x"},{id:"macOS"},{id:"Windows"}],"tab-id":"env"},{title0:a(({value:s,isActive:i})=>[n("Debian-based (including Ubuntu)")]),title1:a(({value:s,isActive:i})=>[n("CentOS7+")]),title2:a(({value:s,isActive:i})=>[n("CentOS 6.x")]),title3:a(({value:s,isActive:i})=>[n("macOS")]),title4:a(({value:s,isActive:i})=>[n("Windows")]),tab0:a(({value:s,isActive:i})=>[z,U]),tab1:a(({value:s,isActive:i})=>[B]),tab2:a(({value:s,isActive:i})=>[e("p",null,[n("Refer to "),e("a",F,[n("blog post"),t(c)]),n("。")])]),tab3:a(({value:s,isActive:i})=>[G]),tab4:a(({value:s,isActive:i})=>[e("p",null,[e("a",X,[n("Install and download openssl"),t(c)]),n("。")])]),_:1},8,["data"]),Y,e("div",H,[q,e("p",null,[n("由于功能复杂，默认情况下不开启编译 webrtc，可参考 "),t(l,{to:"/guide/protocol/webrtc/webrtc_compilation_and_use.html"},{default:a(()=>[n("编译与使用 webrtc")]),_:1})]),e("p",null,[n("Because of complex, the webrtc compilation is not enabled by default. Please refer to "),t(l,{to:"/guide/protocol/webrtc/webrtc_compilation_and_use.html"},{default:a(()=>[n("compilation and usage of webrtc")]),_:1}),n(".")])]),t(o,{id:"192",data:[{id:"Linux"},{id:"macOS"},{id:"Windows"},{id:"Android"},{id:"iOS"}],"tab-id":"env"},{title0:a(({value:s,isActive:i})=>[n("Linux")]),title1:a(({value:s,isActive:i})=>[n("macOS")]),title2:a(({value:s,isActive:i})=>[n("Windows")]),title3:a(({value:s,isActive:i})=>[n("Android")]),title4:a(({value:s,isActive:i})=>[n("iOS")]),tab0:a(({value:s,isActive:i})=>[J]),tab1:a(({value:s,isActive:i})=>[Q]),tab2:a(({value:s,isActive:i})=>[$,e("p",null,[n("For further details, refer to "),t(l,{to:"/guide/install/compilation_instructions_for_windows_version.html"},{default:a(()=>[n("Windows compilation")]),_:1}),n(".")])]),tab3:a(({value:s,isActive:i})=>[ee]),tab4:a(({value:s,isActive:i})=>[ne,ae]),_:1}),se,ie,te,le,e("p",null,[n("If you need more complex business logic, you can implement it through "),t(l,{to:"/guide/media_server/web_hook_api.html"},{default:a(()=>[n("Web HOOK")]),_:1}),n(" and "),t(l,{to:"/guide/media_server/restful_api.html"},{default:a(()=>[n("RESTful API")]),_:1}),n(". At the same time, you can control its parameters through the "),t(l,{to:"/guide/media_server/config_file.html"},{default:a(()=>[n("configuration file")]),_:1}),n(".")]),t(o,{id:"268",data:[{id:"Linux"},{id:"macOS"},{id:"Windows"}],"tab-id":"env"},{title0:a(({value:s,isActive:i})=>[n("Linux")]),title1:a(({value:s,isActive:i})=>[n("macOS")]),title2:a(({value:s,isActive:i})=>[n("Windows")]),tab0:a(({value:s,isActive:i})=>[oe]),tab1:a(({value:s,isActive:i})=>[ce]),tab2:a(({value:s,isActive:i})=>[de]),_:1}),re,ue,pe,me,t(o,{id:"291",data:[{id:"Linux"},{id:"macOS"},{id:"Windows"}],"tab-id":"env"},{title0:a(({value:s,isActive:i})=>[n("Linux")]),title1:a(({value:s,isActive:i})=>[n("macOS")]),title2:a(({value:s,isActive:i})=>[n("Windows")]),tab0:a(({value:s,isActive:i})=>[be]),tab1:a(({value:s,isActive:i})=>[he]),tab2:a(({value:s,isActive:i})=>[ve]),_:1}),ge,_e,ke,e("p",null,[n("Please refer to "),t(l,{to:"/guide/media_server/push_test.html"},{default:a(()=>[n("Stream Test")]),_:1}),n(".")])])}const Le=u(v,[["render",fe],["__file","index.html.vue"]]);export{Le as default};
