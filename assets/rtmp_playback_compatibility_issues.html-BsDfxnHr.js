import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as t,e as i}from"./app-CF_X8wgR.js";const s={},o=i("<p>In general, the specification for RTMP is to first send metadata, followed by config frames, then keyframes, and finally regular frames.</p><p>Once the config frames are received, the decoder can be initialized.</p><p>However, some streams are different, as they receive other frames before receiving the config frame for the video.</p><p>In this case, the video track is not created and initialized.</p><p>There is a preliminary suspicion that the compatibility of the Nginx RTMP server is not good.</p><p>ZLMediaKit&#39;s streaming tool strictly follows the process of sending metadata first, then config frames, followed by keyframes, and finally regular frames.</p><p>It also caches all config frames.</p><p>FFplay can successfully play due to its determination of playback success based on data volume and time.</p><p>As long as the data volume reaches a certain threshold or the time reaches a certain duration, it triggers the event of successful playback.</p><p>The advantage of this approach is a high success rate in playback, but the downside is a longer video opening time.</p>",10),r=[o];function c(n,l){return a(),t("div",null,r)}const d=e(s,[["render",c],["__file","rtmp_playback_compatibility_issues.html.vue"]]);export{d as default};
