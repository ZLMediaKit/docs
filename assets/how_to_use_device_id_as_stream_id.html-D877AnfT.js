import{_ as a,a as e,b as t,c as o,d as g,e as r}from"./how_to_use_device_id_as_stream_id_6-DjqPDa1Y.js";import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,o as p,b as m}from"./app-D6CC-_aF.js";const _={};function d(n,i){return p(),c("div",null,i[0]||(i[0]=[m('<p>为了支持 RTP 流的识别(与摄像头 ID 产生关联), 必须通过 <code>源地址</code> 或 <code>ssrc</code> 或 <code>本地端口号</code> 来区分.</p><p>但是在 issue #338 里面有开发者反馈，有些设备不支持设置 ssrc，ssrc 一直为 0.</p><p>而源地址端口也会一直变，RTP 推流前 SIP 服务器也不知道摄像头推流端口(甚至 IP 都不知道) 那么区分流只通过源地址也不现实, 因为一个局域网内也可能多个设备, 如果 ZLMediaKit 在公网,那么这些流的 IP 是一致的,而端口是随机的,根本没法跟摄像头 ID 对应起来.</p><p>所以为了实现 RTP 推流参数的流 ID 与摄像头 ID 产生关联，就基本只剩下<code>本地端口号</code>这条路了，这就意味着一个端口只能接受一个流。</p><p>在不指定流 ID 时，ZLMediaKit 的行为跟之前完全一样，单端口支持多流，ssrc 作为 stream id。</p><p>如果指定了该端口绑定的流 ID，那么该端口只能接收一路流。</p><p>以下是关键代码：</p><figure><img src="'+a+'" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><figure><img src="'+e+'" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><figure><img src="'+t+'" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><figure><img src="'+o+'" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><figure><img src="'+g+'" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><figure><img src="'+r+'" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure>',13)]))}const x=s(_,[["render",d],["__file","how_to_use_device_id_as_stream_id.html.vue"]]);export{x as default};
